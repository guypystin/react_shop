import {
  ADD_SCANNER_TO_BASKET,
  CLEAN_BASKET,
  FETCH_CATEGORIES_FAILURE,
  FETCH_CATEGORIES_START,
  FETCH_CATEGORIES_SUCCESS,
  FETCH_SCANNERS_BY_ID_FAILURE,
  FETCH_SCANNERS_BY_ID_START,
  FETCH_SCANNERS_BY_ID_SUCCESS,
  FETCH_SCANNERS_FAILURE,
  FETCH_SCANNERS_START,
  FETCH_SCANNERS_SUCCESS,
  LOAD_MORE_SCANNERS_FAILURE,
  LOAD_MORE_SCANNERS_START,
  LOAD_MORE_SCANNERS_SUCCESS,
  REMOVE_SCANNER_FROM_BASKET,
  SEARCH_SCANNER
} from 'actionTypes'
import {
  fetchCategories as fetchCategoriesApi,
  fetchScannerById as fetchScannerByIdApi,
  fetchScanners as fetchScannersApi,
  loadMoreScanners as loadMoreScannersApi
} from 'api'

import {getRenderedScannersLength} from 'selectors'

export const fetchScanners = () => async dispatch => {
  dispatch({type: FETCH_SCANNERS_START})

  try {
    const scanners = await fetchScannersApi()
    dispatch({
      type: FETCH_SCANNERS_SUCCESS,
      payload: scanners
    })
  } catch (err) {
    dispatch({
      type: FETCH_SCANNERS_FAILURE,
      payload: err,
      error: true
    })
  }
}


export const loadMoreScanners = () => async (dispatch, getState) => {
  const offset = getRenderedScannersLength(getState())
  dispatch({type: LOAD_MORE_SCANNERS_START})

  try {
    const scanners = await loadMoreScannersApi({offset})
    dispatch({
      type: LOAD_MORE_SCANNERS_SUCCESS,
      payload: scanners
    })
  } catch (err) {
    dispatch({
      type: LOAD_MORE_SCANNERS_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const fetchScannerById = (id) => async dispatch => {
  dispatch({type: FETCH_SCANNERS_BY_ID_START})

  try {
    const scanner = await fetchScannerByIdApi(id)
    dispatch({
      type: FETCH_SCANNERS_BY_ID_SUCCESS,
      payload: scanner
    })
  } catch (err) {
    dispatch({
      type: FETCH_SCANNERS_BY_ID_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const addScannerToBasket = id => dispatch => {
  dispatch({
    type: ADD_SCANNER_TO_BASKET,
    payload: id
  })
}

export const searchScanner = text => dispatch => {
  dispatch({
    type: SEARCH_SCANNER,
    payload: text
  })
}

export const fetchCategories = () => async dispatch => {
  dispatch({type: FETCH_CATEGORIES_START})

  try {
    const categories = await fetchCategoriesApi()
    dispatch({
      type: FETCH_CATEGORIES_SUCCESS,
      payload: categories
    })
  } catch (err) {
    dispatch({
      type: FETCH_CATEGORIES_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const removeScannerFromBasket = id => async dispatch => {
  dispatch({
    type: REMOVE_SCANNER_FROM_BASKET,
    payload: id
  })
}

export const cleanBasket = () => async dispatch => {
  dispatch({
    type: CLEAN_BASKET
  })
}

export const basketCheckout = scanners => () => {
  alert(JSON.stringify(scanners))
}