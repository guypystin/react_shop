import * as R from 'ramda'

import {
  basketCheckout,
  cleanBasket,
  removeScannerFromBasket
} from 'actions'
import {
  getBasketscannersWithCount,
  getTotalBasketPrice
} from 'selectors'

import {Link} from 'react-router-dom'
import React from 'react'
import {connect} from 'react-redux'

const Basket = ({
  scanners,
  totalPrice,
  removeScannerFromBasket,
  basketCheckout,
  cleanBasket
}) => {
  // const newTo = {
  //   pathname:'/payment',
  //   Param1: {totalPrice}
  // }
  const isBasketEmpty = R.isEmpty(scanners)
  const renderContent = () => {
    return (
      <div>
        {isBasketEmpty && <div>Ваша корзина пуста, пожалуйста, добавьте товары</div>}

        <div className='table-responsive'>
          <table className='table-bordered table-striped table-condensed cf basket__table '>
            <tbody>
            {scanners.map((scanner, index) => (
              <tr
                key={index}
                className='item-checout'
              >
                <td className='first-column-checkout basket__first'>
                  <img
                    className='img-thumbnail'
                    src={scanner.image}
                    alt={scanner.name}
                  />
                </td>
                <td basket__two>{scanner.name}</td>
                <td basket__three>{scanner.price} ₽</td>
                <td basket__four>{scanner.count}</td>
                <td>
                  <span
                    onClick={() => removeScannerFromBasket(scanner.id)}
                    className='delete-cart basket__delete'
                  ></span>
                </td>
              </tr>
            ))}
            </tbody>
          </table>
        </div>
        {
          R.not(isBasketEmpty) &&
          <div className='row'>
            <div className='pull-right total-user-checkout basket__price'>
              <b>Итого:</b>
              {totalPrice} Руб
            </div>
          </div>
        }
      </div>
    )
  }
 
  const renderSidebar = () => (
    
    <div>
      <Link
        className='btn btn-info basket__continue'
        to='/'
      >
        <span className='glyphicon glyphicon-info-sign'></span>
        <span className="basket__continue-text">Продолжить покупки</span>
      </Link>
      {
        R.not(isBasketEmpty) &&
        <div>
          <button
            onClick={cleanBasket}
            className='btn btn-danger'
          >
            <span className='glyphicon glyphicon-trash basket__clear'></span>
            Отчистить
          </button>

          
          <Link to={{
            
              pathname:'/payment',
              Param1:'1942457',
          }}
        className='btn btn-success'
      >
        <span className='glyphicon glyphicon-info-sign'></span>
        <span className="basket__continue-text">Купить</span>
      </Link>
          {/* <button
            className='btn btn-success'
            onClick={() => basketCheckout(scanners)}
          >
            <span className='glyphicon glyphicon-envelope basket__checkout'></span>
            Купить
          </button> */}
        </div>
      }
    </div>
  )
  
  return (
    <div className='view-container'>
      <div className='container'>
        <div className='row'>
          <div className='col-md-9'>
            {renderContent()}
          </div>
          <div className='col-md-3'>
            {renderSidebar()}
          </div>

        </div>
      </div>
    </div>
  )
  
}

const mapStateToProps = state => {
  return {
    scanners: getBasketscannersWithCount(state),
    totalPrice: getTotalBasketPrice(state)
  }
}

const mapDispatchToProps = {
  removeScannerFromBasket,
  cleanBasket,
  basketCheckout
}

export default connect(mapStateToProps, mapDispatchToProps)(Basket)